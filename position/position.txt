定位

1.CSS 有三种基本的定位机制：普通流、浮动和绝对定位。
    除非专门指定，否则所有框都在普通流中定位。也就是说，普通流中的元素的位置由元素在 HTML 中的位置决定。
    块级框从上到下一个接一个地排列，框之间的垂直距离是由框的垂直外边距计算出来。
    行内框在一行中水平布置。可以使用水平内边距、边框和外边距调整它们的间距。
    但是，垂直内边距、边框和外边距不影响行内框的高度。由一行形成的水平框称为行框（Line Box），行框的高度总是足以容纳它包含的所有行内框。不过，设置行高可以增加这个框的高度。

2.relative：相对定位，相对于其正常位置来移动
    元素框偏移某个距离。元素仍保持其未定位前的形状，它原本所占的空间仍保留。

3.absolute：绝对定位，正常位置消失，相对于 static 定位以外的第一个父元素进行定位。也就是说，它是相对于父元素定位，但是这个父元素必须不是static定位的，也就是说必须有定位，如relative等。如果它的直接父元素没有定位，就接着往上找。
    元素框从文档流完全删除，并相对于其包含块定位。
    元素原先在正常文档流中所占的空间会关闭，就好像元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。

4.fixed：固定定位，类似于absolute，不过其包含块是浏览器窗口本身。

5.top, bottom, left, right: 用于定位元素外边距的边界与包含块边界的偏移距离
    从内容到包含块边界：padding + border + margin + top(或另外三个)

6.overflow: 当内容溢出元素框时发生的事情。默认值：visible
    visible	内容不会被修剪，会呈现在元素框之外。
    hidden	内容会被修剪，并且其余内容是不可见的。
    scroll	内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。
    auto	如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。

7.clip：裁剪一个矩形，用于绝对定位的元素。
    矩形内的内容才可见。出了这个剪裁区域的内容会根据 overflow 的值来处理。
    shape	设置元素的形状。唯一合法的形状值是：rect (top, right, bottom, left)
    auto	默认值。不应用任何剪裁。

8.vertical-align 垂直对齐方式。用于行元素。
    baseline	默认。元素放置在父元素的基线上。
    sub	垂直对齐文本的下标。
    super	垂直对齐文本的上标
    top	把元素的顶端与行中最高元素的顶端对齐
    text-top	把元素的顶端与父元素字体的顶端对齐
    middle	把此元素放置在父元素的中部。
    bottom	把元素的顶端与行中最低的元素的顶端对齐。
    text-bottom	把元素的底端与父元素字体的底端对齐。
    length	 
    %	使用 "line-height" 属性的百分比值来排列此元素。允许使用负值。

9.z-index	设置元素的堆叠顺序。仅适用于定位元素。如position:absolute 
    拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。